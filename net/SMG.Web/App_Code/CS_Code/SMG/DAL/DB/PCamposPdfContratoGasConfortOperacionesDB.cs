//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por la herramienta GeneradorCodigo.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto 
//     y se perderán si se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using Iberdrola.Commons.BaseClasses;
using Iberdrola.Commons.DataAccess;
using Iberdrola.Commons.Exceptions;
using Iberdrola.Commons.Messages;
using Iberdrola.SMG.DAL.DTO;

namespace Iberdrola.SMG.DAL.DB
{
    /// <summary>
    /// Métodos de acceso a base de datos para la entidad PCamposPdfContratoGasConfort
    /// </summary>
    public partial class PCamposPdfContratoGasConfortDB
    {
        /// <summary>
        /// Obtiene el PCamposPdfContratoGasConfortDTO que cumple con la PK y no esté de baja
        /// </summary>
        /// <param name="idCampo"></param>
        /// <returns>PCamposPdfContratoGasConfortDTO que cumple con la PK, null si no lo encuentra.</returns>
        public List<PCamposPdfContratoGasConfortDTO> ObtenerDatosContratoGasConfort(string pCodContrato, decimal pIdSolicitud)
        {
            IDataReader dr = null;

            List<PCamposPdfContratoGasConfortDTO> lista = null;

            try
            {
                DataBaseLibrary db = new DataBaseLibrary(BaseDB.SMG_DB);
                lista = new List<PCamposPdfContratoGasConfortDTO>();

                string[] aNombres = new string[2];
                DbType[] aTipos = new DbType[2];
                object[] aValores = new object[2];

                aNombres[0] = "@pCOD_CONTRATO";
                aTipos[0] = DbType.String;
                aValores[0] = pCodContrato;

                aNombres[1] = "@pID_SOLICITUD";
                aTipos[1] = DbType.Decimal;
                aValores[1] = pIdSolicitud;

                // Hacemos la llamada a la base de datos
                dr = db.RunProcDataReader("spSMGObtenerDatosContratoGasConfortPDF", aNombres, aTipos, aValores);

                // Rebuperamos el objeto buscado
                while (dr.Read())
                {
                    lista.Add(ObtenerPCamposPdfContratoGasConfortDTO(dr));
                }
            }
            catch (BaseException)
            {
                throw;
            }
            catch (Exception ex)
            {
                throw new DALException(false, ex, "2004");
            }
            finally
            {
                if (dr != null)
                {
                    dr.Close();
                }
            }

            // retornamos el objeto buscado, si no se ha encontrato nada se retorna null
            return lista;
        }


    }
}